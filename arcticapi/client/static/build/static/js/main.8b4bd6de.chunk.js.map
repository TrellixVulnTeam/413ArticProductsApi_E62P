{"version":3,"sources":["context.js","Top.js","Bottom.js","Left.js","Right.js","ProductCard.js","Center.js","About.js","Help.js","ProductDetail.js","Cart.js","Checkout.js","Receipt.js","App.js","context-provider.js","serviceWorker.js","index.js"],"names":["AppContext","React","createContext","Top","props","context","useContext","Navbar","className","style","fontSize","Brand","href","Nav","defaultActiveKey","Item","to","Collapse","cartCount","Text","NavDropdown","title","Bottom","Left","categories","total","Object","values","products","p","category","sort","map","c","key","id","Right","ProductCard","Card","Img","variant","src","process","product","filename","right","Body","Title","name","parseFloat","price","toFixed","Center","match","useRouteMatch","path","strict","sensitive","Products","Row","filter","cat","find","x","params","Col","md","About","Help","ProductDetail","parseInt","useState","imgIdx","setImgIdx","Container","description","left","onClick","e","addToCart","Image","rounded","width","height","onMouseEnter","onMouseLeave","Cart","bCart","cart","undefined","Table","hover","entries","prod","removeFromCart","stripePromise","loadStripe","Checkout","stripe","CheckoutController","getCartTotal","items","iCount","useStripe","elements","useElements","history","useHistory","i","initialValues","address1","address2","city","state","zipcode","validateOnChange","validateOnBlur","validate","errors","payment","onSubmit","actions","a","async","console","log","axios","post","resp","data","confirmCardPayment","client_secret","payment_method","card","getElement","CardElement","billing_details","address","stripeResp","error","message","setFieldError","paymentIntent","status","clearCart","push","form","CARD_ELEMENT_OPTIONS","base","color","fontFamily","fontSmoothing","invalid","iconColor","disabled","PaymentForm","type","isSubmitting","rProps","Group","options","meta","animation","size","Input","Label","Control","placeholder","field","touched","App","fluid","AppProvider","pid","setState","produce","draft","qty","Provider","value","this","get","catresp","cats","prodresp","prods","Component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8b4bd6de.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n// needs to be in different app so that no circular imports\r\nconst AppContext = React.createContext()\r\nexport default AppContext\r\n\r\n\r\n//AppContext.Consumer\r\n//AppContext.Provider","import React from 'react'\r\nimport { Navbar, NavDropdown, Nav } from 'react-bootstrap'\r\nimport { Link} from 'react-router-dom'\r\nimport AppContext from './context'\r\n\r\nexport default function Top(props) {\r\n\r\n    const context = React.useContext(AppContext)\r\n\r\n    return ( \r\n        <Navbar className=\"\">\r\n   \r\n          <i className=\"fas fa-store p-2 text-secondary float-left\" style={{\r\n              fontSize: \"4rem\", \r\n            }}></i> \r\n            \r\n            <Navbar.Brand href=\"/\" style={{fontSize: \"2rem\"}} className=\"\">\r\n                Arctic Products\r\n            </Navbar.Brand>\r\n            <Nav defaultActiveKey=\"/\" style={{fontSize: \"1.25rem\"}} className=\"align-bottom\">\r\n                <Nav.Item>\r\n                    <Link to=\"/\" className='text-secondary mr-4'>Home </Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Link to=\"/about\" className='text-secondary mr-4'>About </Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Link to=\"/help\" className='text-secondary mr-4'>Help </Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n            \r\n            <Navbar.Collapse className=\"justify-content-end\">\r\n                <Nav.Item>  \r\n                    <Link to=\"/cart\" className='text-secondary mr-4 float-right'>\r\n                            <i className=\"fas fa-shopping-cart p-2 text-secondary\" style={{fontSize: \"1.5rem\", }}></i> \r\n                            <span style={{fontSize: \"1.25rem\"}}>({context.cartCount}) </span>\r\n                    </Link>\r\n                </Nav.Item>\r\n                <Navbar.Text>\r\n                    <NavDropdown title='Hello Jeffrey Mohler'>\r\n                        <NavDropdown.Item>View Profile</NavDropdown.Item>\r\n                        <NavDropdown.Item>Sign Out</NavDropdown.Item>\r\n                    </NavDropdown>\r\n                </Navbar.Text>\r\n            </Navbar.Collapse>\r\n            \r\n        </Navbar>   \r\n    )\r\n}","import React from 'react'\r\nimport { } from 'react-bootstrap'\r\n\r\nexport default function Bottom(props) {\r\n    return (\r\n        <div className=\"App-footer\" style={{\r\n            fontSize: \"1rem\"\r\n        }}>Artic Products &copy; 2020</div>\r\n    )\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport AppContext from './context'\r\n//import Products from './products'\r\n\r\nexport default function Left(props) {\r\n    \r\n    let categories = {}\r\n    let total = 0\r\n    const context = React.useContext(AppContext)\r\n\r\n    categories = context.categories\r\n    \r\n    //initialize total value in every category object\r\n    for (const c of Object.values(categories)){\r\n        c.total = 0\r\n    }\r\n\r\n    //count up the number of products in each category. add to total value.\r\n    for (const p of Object.values(context.products)){\r\n        categories[p.category].total =   categories[p.category].total + 1\r\n        total++\r\n    }\r\n\r\n   \r\n    return (\r\n        <div className = \"float-left\">\r\n           \r\n        <Nav defaultActiveKey=\"/\" className=\"flex-column pt-3 text-left\">\r\n            \r\n                <Link to=\"/\" className=\"nav-link font-weight-bold\">All Products ({total})</Link>\r\n\r\n                {Object.values(categories).sort().map( (c) => {\r\n                    return (\r\n                        <Link key={c.id} className=\"nav-link\" to={`/Category/${c.title}`}>{c.title} ({c.total})</Link>\r\n                    )\r\n                })}\r\n      </Nav>\r\n      </div>\r\n    )\r\n}","import React from 'react'\r\nimport { } from 'react-bootstrap'\r\n\r\nexport default function Right(props) {\r\n    return (\r\n        <div>\r\n            Recent Products\r\n            <ul>\r\n                <li>Product 1</li>\r\n                <li>Product 2</li>\r\n                <li>Product 3</li>\r\n                <li>Product 4</li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function ProductCard(props) {\r\n    return (\r\n        <Card className='text-primary'>        \r\n            <Card.Img variant='top' src ={`${process.env.PUBLIC_URL}/productimages/${props.product.filename}-1.png`}/>\r\n            <Link to={`/product/${props.product.id}`} className='position-absolute btn btn-secondary' style={{right: 0}}>Details</Link>\r\n            <Card.Body className=\"bg-secondary p-2 text-center\"> \r\n                <Card.Title>{props.product.name}</Card.Title>\r\n                <Card.Text style={{fontSize: 20}}>${parseFloat(props.product.price).toFixed(2)}</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}","import React from 'react'\r\nimport { Col, Row } from 'react-bootstrap'\r\n//import Products from './products'\r\nimport ProductCard from './ProductCard'\r\nimport { useRouteMatch } from 'react-router'\r\nimport AppContext from './context'\r\n\r\nexport default function Center(props) {\r\n    let match = useRouteMatch({\r\n        path: \"/Category/:id\",\r\n        strict: true,\r\n        sensitive: true\r\n    })\r\n\r\n    const context = React.useContext(AppContext)\r\n    const Products = context.products\r\n\r\n    // console.log(products)\r\n    // console.log(Products)\r\n\r\n    return (\r\n        <div>\r\n            \r\n            <div>\r\n                <h1 className=\"text-secondary text-center\">Welcome to Artic Products!</h1>\r\n                <Row>\r\n\r\n                {Object.values(Products).filter(p => { \r\n                    if (match != null)\r\n                    {\r\n                        const cat = Object.values(context.categories).find(x => x.title === match.params.id)\r\n                        return (\r\n                            p.category === cat.id)\r\n                    }        \r\n                    else \r\n                    {\r\n                        return p\r\n                    }}).map((p => \r\n                    {\r\n                        return (                       \r\n                            <Col md=\"3\" className=\"p-4\" key={p.id}>                           \r\n                                <ProductCard  product = {p} />\r\n                            </Col> )}))}\r\n                </Row>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","import React from 'react'\r\nimport { } from 'react-bootstrap'\r\n\r\nexport default function About(props) {\r\n    return (\r\n        <div>\r\n            <div>\r\n                This is the About Page\r\n            </div>\r\n            <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { } from 'react-bootstrap'\r\n\r\nexport default function Help(props) {\r\n    return (\r\n        <div>\r\n            <div>\r\n                This is the Help Page.\r\n            </div>\r\n            <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Container, Col, Image, Row } from 'react-bootstrap'\r\nimport { useRouteMatch, Link} from 'react-router-dom'\r\nimport AppContext from './context'\r\n//import Products from './products'\r\n\r\nexport default function ProductDetail(props) {\r\n    let match = useRouteMatch({\r\n            path: \"/product/:id\",\r\n            strict: true,\r\n            sensitive: true\r\n    })\r\n\r\n    const context = React.useContext(AppContext)\r\n    const Products = context.products\r\n\r\n    let product = []\r\n    product = Object.values(Products).find(x => x.id === parseInt(match.params.id))\r\n    \r\n    const[imgIdx, setImgIdx] = React.useState(\"1\")\r\n\r\n    if (product == null)\r\n    {\r\n        return (\r\n            <div className=\"text-secondary\">\r\n                <h2 className=\"mt-5\">Sorry, Product Was Not Found.</h2>\r\n                <h3>Please try again.</h3>\r\n            </div>\r\n        )\r\n    }\r\n    else \r\n    {\r\n        return (\r\n            <Container className=\"text-secondary\">\r\n               <Row>\r\n                    <Col md=\"8\">\r\n                    <h1 className=\"p-2\">{product.name}</h1>\r\n                    <p className=\"text-justify\">{product.description}</p>\r\n                    <h3 className=\"text-left\">${parseFloat(product.price).toFixed(2)}</h3>\r\n                    <br/>\r\n                    <Link to={\"/cart\"} className='position-absolute btn btn-warning' style={{left: 15}} onClick={e=>{context.addToCart(product.id)}} >Add to Cart</Link>\r\n                    </Col>\r\n                    <Col md=\"4\">\r\n                        <Image rounded src={`${process.env.PUBLIC_URL}/productimages/${product.filename}-${imgIdx}.png`} className=\" float-right mt-4\" width=\"300px\" height=\"300px\"></Image>\r\n                        <Row className=\"\">\r\n                            <Col></Col>\r\n                            <Col> \r\n                                <Image rounded src={`${process.env.PUBLIC_URL}/productimages/${product.filename}-1.png`} onMouseEnter={() => setImgIdx(1)} onMouseLeave={() => setImgIdx(1)} \r\n                                className=\"float-right mt-4 mb-4\" width=\"30px\" height=\"30px\"></Image>\r\n                            </Col>\r\n                            <Col> \r\n                                <Image rounded src={`${process.env.PUBLIC_URL}/productimages/${product.filename}-2.png`} onMouseEnter={() => setImgIdx(2)} onMouseLeave={() => setImgIdx(1)} \r\n                                className=\"float-right mt-4 mb-4\" width=\"30px\" height=\"30px\"></Image>\r\n                            </Col>\r\n                            <Col> \r\n                                <Image rounded src={`${process.env.PUBLIC_URL}/productimages/${product.filename}-3.png`} onMouseEnter={() => setImgIdx(3)} onMouseLeave={() => setImgIdx(1)} \r\n                                className=\"float-right mt-4 mb-4\" width=\"30px\" height=\"30px\"></Image>\r\n                            </Col>\r\n                            <Col> \r\n                                <Image rounded src={`${process.env.PUBLIC_URL}/productimages/${product.filename}-4.png`} onMouseEnter={() => setImgIdx(4)} onMouseLeave={() => setImgIdx(1)} \r\n                                className=\"float-right mt-4 mb-4\" width=\"30px\" height=\"30px\"></Image>\r\n                            </Col>\r\n                            <Col></Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { Table, Image } from 'react-bootstrap'\r\nimport { Link} from 'react-router-dom'\r\nimport AppContext from './context'\r\n\r\nexport default function Cart(props) {\r\n\r\n    const context = React.useContext(AppContext)\r\n    let bCart = false //boolean used to check if any non-undefined items in cart\r\n    let total = 0 //keep track of total price\r\n\r\n    for (const c of Object.values(context.cart))\r\n    {\r\n        if (c !== undefined)\r\n        {\r\n            bCart = true\r\n        }\r\n    }\r\n\r\n    if (bCart === false)\r\n    { \r\n        return (\r\n        <div className='text-secondary'>\r\n            <h1 className=\"text-secondary\">Shopping Cart</h1>\r\n            <h4>There are no items in the cart</h4>\r\n        </div>\r\n        )\r\n    }\r\n    else\r\n    {\r\n        return (\r\n            <div className='text-secondary'>\r\n                <h1 className=\"text-secondary\">Shopping Cart</h1>\r\n                <Table hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th></th>\r\n                            <th>Product</th>\r\n                            <th>Quantity</th>\r\n                            <th>Price</th>\r\n                            <th>Extended</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {Object.entries(context.cart).map((c) => { //.filter(c => {return c[1] !== undefined})\r\n                            const prod = Object.values(context.products).find(x => x.id === parseInt(c[0]))\r\n                            total = total + (prod.price * c[1])\r\n                            return (\r\n                                <tr key={prod.id}>\r\n                                    <th><Image rounded src={`/productimages/${prod.filename}-1.png`} width=\"100px\" height=\"100px\"></Image></th>\r\n                                    <th>{prod.name}</th>\r\n                                    <th>{c[1]}</th>\r\n                                    <th>${parseFloat(prod.price).toFixed(2)}</th>\r\n                                    <th>${parseFloat(prod.price * c[1]).toFixed(2)}</th>\r\n                                    <th><Link to={\"/cart\"} className='btn btn-secondary'  onClick={e=>{context.removeFromCart(prod.id, c[1])}} >Remove</Link></th>\r\n                                </tr>\r\n                            )}) }\r\n                    </tbody>\r\n                    <thead>\r\n                        <tr>\r\n                            <th></th>\r\n                            <th>Total</th>\r\n                            <th></th>\r\n                            <th></th>\r\n                            <th>${parseFloat(total).toFixed(2)}</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                </Table>\r\n                <Link to={\"/checkout\"} className='btn btn-warning float-right w-100'>Checkout</Link>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\nimport { Formik, Form, Field} from 'formik'\r\nimport AppContext from './context'\r\nimport axios from 'axios'\r\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { useHistory } from 'react-router'\r\n\r\n\r\nconst stripePromise = loadStripe('pk_test_CPAu6sGwqjTbRvKkWFmBaOCO006josfk80')\r\n\r\nfunction Checkout(props) {\r\n    // we'll add Stripe's Elements component here later\r\n    return (\r\n        <Elements stripe={stripePromise}>\r\n            <CheckoutController />\r\n        </Elements>\r\n    )\r\n}\r\nexport default Checkout\r\n\r\n\r\nconst CheckoutController = props => {\r\n    const context = React.useContext(AppContext)\r\n    const total = context.getCartTotal()\r\n    const items = {}\r\n    let iCount = 0\r\n    const stripe = useStripe()\r\n    const elements = useElements()\r\n    let history = useHistory()\r\n\r\n    Object.entries(context.cart).map(i => {\r\n        const prod = Object.values(context.products).find(x => x.id === parseInt(i[0]))\r\n        items[iCount] = {'pid': i[0], 'price': prod.price, 'qty': i[1]}\r\n        // .pid = i[0]\r\n        // items[iCount].price = prod.price\r\n        // items[iCount].qty = i[1]\r\n        iCount++\r\n        return (items)\r\n    })\r\n    //console.log(items)\r\n    //console.log(total)\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{  //good to have values just for testing\r\n                name: 'Conrad Fox',\r\n                address1: '1234',\r\n                address2: '5678',\r\n                city: 'Provo',\r\n                state: 'UT',\r\n                zipcode: '84602',\r\n                total: total,\r\n                items: items,                \r\n            }}\r\n            validateOnChange={false}\r\n            validateOnBlur={false}\r\n            validate={values => {\r\n                const errors = {}\r\n                //console.log('validating', values)\r\n                if (values.name === null || values.name === \"\") \r\n                {\r\n                    errors.name = 'Name is a required field'\r\n                }\r\n                if (values.address1 === null || values.address1 === \"\") \r\n                {\r\n                    errors.address1 = 'Address1 is a required field'\r\n                }\r\n                if (values.city === null || values.city === \"\") \r\n                {\r\n                    errors.city = 'City is a required field'\r\n                }\r\n                if (values.state === null || values.state === \"\") \r\n                {\r\n                    errors.state = 'State is a required field'\r\n                }\r\n                if (values.zipcode === null || values.zipcode === \"\") \r\n                {\r\n                    errors.zipcode = 'Zip is a required field'\r\n                }\r\n                if (total === 0)\r\n                {\r\n                    errors.payment = 'Cart is empty'\r\n                }\r\n \r\n                return errors\r\n            }}\r\n            onSubmit={async (values, actions) => {\r\n                console.log('submit', values)\r\n                const resp = await axios.post('/api/sale/', {\r\n                    //values go here\r\n                     values\r\n                })\r\n                console.log(resp.data)\r\n\r\n                const stripeResp = await stripe.confirmCardPayment(resp.data.client_secret, {\r\n                    payment_method: {\r\n                        card: elements.getElement(CardElement),\r\n                        billing_details: {\r\n                            name: values.name,\r\n                            address: values.address1 + \" \" + values.address2 + \" \" +  values.city + \", \" + values.state + \" \" + values.zipcode,\r\n                        }\r\n                    }\r\n                })\r\n                console.log(stripeResp, 1)\r\n                if (stripeResp.error) {\r\n                    console.log(stripeResp.error.message)\r\n                    actions.setFieldError('payment', stripeResp.error.message)\r\n                }\r\n                else {\r\n                    if (stripeResp.paymentIntent.status === 'succeeded') {\r\n                        context.clearCart()\r\n                        history.push('/receipt')\r\n                    }\r\n                }\r\n                \r\n\r\n                // setTimeout(() => {  // wait 2 seconds, then set the form as \"not submitting\"\r\n                //     actions.setSubmitting(false)\r\n                // }, 2000)\r\n            }}\r\n        >{form => (\r\n            <PaymentForm form={form} total={total}/>\r\n        )}</Formik>\r\n    )\r\n}\r\n\r\n\r\n/**\r\n * The form layout/html.\r\n * This component needs finishing.\r\n */\r\n\r\nconst CARD_ELEMENT_OPTIONS = {\r\n    style: {\r\n      base: {\r\n        color: \"#32325d\",\r\n        fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n        fontSmoothing: \"antialiased\",\r\n        fontSize: \"16px\",\r\n        \"::placeholder\": {\r\n          color: \"#aab7c4\",\r\n        },\r\n        // backgroundColor: \"#ffffff\",\r\n        // padding: \"4px\",\r\n      },\r\n      invalid: {\r\n        color: \"#fa755a\",\r\n        iconColor: \"#fa755a\",\r\n      },\r\n    },\r\n    disabled: false\r\n  };\r\n\r\nconst PaymentForm = props => (\r\n    <bs.Container>\r\n        <Form>\r\n        <h1 className=\"text-secondary float-left pt-1\">Checkout</h1>\r\n        <br/><br/><br/>\r\n        <bs.Row>\r\n            <bs.Col>\r\n                <div className='text-left bg-light border border-dark rounded p-2'>\r\n                    <h5 className='text-decoration-underline'>Shipping</h5>\r\n                    <Input title=\"Name:\" name=\"name\" type=\"text\" disabled={props.form.isSubmitting}/>\r\n                    <Input title=\"Address1:\" name=\"address1\" type=\"text\" disabled={props.form.isSubmitting}/>\r\n                    <Input title=\"Address2:\" name=\"address2\" type=\"text\" disabled={props.form.isSubmitting}/>\r\n                    <Input title=\"City:\" name=\"city\" type=\"text\" disabled={props.form.isSubmitting}/>\r\n                    <Input title=\"State:\" name=\"state\" type=\"text\" disabled={props.form.isSubmitting}/>\r\n                    <Input title=\"Zip:\" name=\"zipcode\" type=\"number\" disabled={props.form.isSubmitting}/>\r\n                </div>\r\n            </bs.Col>\r\n            <bs.Col>\r\n                <div className='text-left bg-light border border-dark rounded p-2'>\r\n                    <h5 className='text-decoration-underline'>Payment</h5><br/>\r\n                    <div className=\"bg-danger border border-light rounded pt-3 pl-2 pr-2\">                       \r\n                        <Field name='payment'>{rProps => (\r\n                            <bs.Form.Group>                       \r\n                            {CARD_ELEMENT_OPTIONS.disabled = props.form.isSubmitting}\r\n                            <CardElement options={CARD_ELEMENT_OPTIONS} />\r\n                            {rProps.meta.error &&\r\n                                <span className=\"text-warning\">{rProps.meta.error}</span>}\r\n                            </bs.Form.Group>\r\n                        )}</Field>\r\n\r\n                    </div>\r\n                    <br/>\r\n                    <div className='text-center'>\r\n                        Your card will be charged ${props.total}. <br/><br/>\r\n                        {(() => {\r\n                            if (props.form.isSubmitting)\r\n                            {\r\n                                return (\r\n                                <bs.Button type='submit' className=\"btn-warning\" disabled={props.form.isSubmitting}>\r\n                                    <bs.Spinner animation='border' size='sm' disabled></bs.Spinner> <span>&nbsp;</span>\r\n                                    Purchase\r\n                                </bs.Button>\r\n                                )}\r\n                            else\r\n                            {\r\n                                return (\r\n                                <bs.Button type='submit' className=\"btn-warning\" disabled={props.form.isSubmitting}>\r\n                                    Purchase\r\n                                </bs.Button>\r\n                                )}\r\n                        })()}\r\n                        \r\n                    </div>\r\n                </div>\r\n            </bs.Col>\r\n        </bs.Row>\r\n        </Form>\r\n        <br/>\r\n    </bs.Container>\r\n)\r\n\r\n\r\n/**\r\n * A form input.\r\n *   props.title - the title that shows above the input box\r\n *   props.type - the type of input (see React Bootstrap Form.Control)\r\n *   props.placeholder - placeholder text in the input.\r\n * This component is finished and doesn't need additional work.\r\n */\r\nconst Input = (props) => (\r\n    <Field name={props.name}>{rProps => (\r\n        <bs.Form.Group>\r\n            {props.title &&\r\n                <bs.Form.Label>{props.title}</bs.Form.Label>\r\n            }\r\n            <bs.Form.Control\r\n                type={props.type}\r\n                placeholder={props.placeholder}\r\n                disabled={props.disabled}\r\n                {...rProps.field}\r\n            />\r\n            {rProps.meta.touched && rProps.meta.error &&\r\n                <div className=\"text-warning\">{rProps.meta.error}</div>\r\n            }\r\n        </bs.Form.Group>\r\n    )}</Field>\r\n)","import React from 'react'\r\nimport { } from 'react-bootstrap'\r\n\r\nexport default function Help(props) {\r\n    return (\r\n        <div className='text-left text-secondary'>\r\n            <br/>\r\n            <h2>\r\n                Thank you for your order!\r\n            </h2>\r\n            <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n//import logo from './logo.svg';\r\nimport './App.css';\r\nimport { Container, Row, Col} from 'react-bootstrap'\r\nimport Top from './Top'\r\nimport Bottom from './Bottom'\r\nimport Left from './Left'\r\nimport Right from './Right'\r\nimport Center from './Center'\r\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\nimport About from './About'\r\nimport Help from './Help'\r\nimport ProductDetail from './ProductDetail'\r\nimport Cart from './Cart'\r\nimport Checkout from './Checkout'\r\nimport Receipt from './Receipt'\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n    <div className=\"App\">\r\n      <header className=\"\">\r\n          <Container fluid className=\"min-vh-100 d-flex flex-column\">\r\n            <Row>\r\n                <Col className=\"bg-primary\"> \r\n                  <Top/>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\" flex-grow-1\">\r\n              <Col className=\"bg-secondary\" md=\"2\">\r\n                <Left/>\r\n              </Col>\r\n              <Col className=\"bg-success\" md=\"8\">\r\n                    <Switch>\r\n                        <Route path=\"/about\">\r\n                            <About/>\r\n                        </Route>\r\n                        <Route path=\"/help\">\r\n                            <Help/>\r\n                        </Route>\r\n                        <Route path=\"/product/\">\r\n                            <ProductDetail/>\r\n                        </Route>\r\n                        <Route path=\"/cart/\">\r\n                            <Cart/>\r\n                        </Route>\r\n                        <Route path=\"/checkout/\">\r\n                            <Checkout/>\r\n                        </Route>\r\n                        <Route path=\"/receipt/\">\r\n                            <Receipt/>\r\n                        </Route>\r\n                        <Route path=\"/\">\r\n                            <Center/>\r\n                        </Route>      \r\n                    </Switch>                           \r\n              </Col>\r\n              <Col className=\"bg-info\" md=\"2\">\r\n                <Right/>\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"bg-primary\">\r\n                <Col  className=\"bg-primary\">\r\n                  <Bottom/>\r\n                </Col>\r\n            </Row>\r\n          </Container>\r\n      </header>\r\n    </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport AppContext from './context'\r\nimport App from './App'\r\nimport {produce} from 'immer'\r\n\r\n/** The context provider for our app */\r\nexport default class AppProvider extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.actions = {\r\n            // functions here\r\n            addToCart: this.addToCart,\r\n            removeFromCart: this.removeFromCart,\r\n            getCartTotal: this.getCartTotal,\r\n            clearCart: this.clearCart,\r\n            //recountCart: this.recountCart\r\n        }\r\n        this.state = {\r\n            categories: {},\r\n            products: {},\r\n            cart: {},\r\n            cartCount: 0,\r\n        }\r\n\r\n        //load categories here (in constructor) is a bad idea.. it would freeze the system. // just initialize categories, products\r\n    }\r\n\r\n    render() {\r\n        // if (!this.state.categories) {\r\n        //     return <div>Loading...</div>\r\n        // }\r\n\r\n        return ( // ... is a spreader. \r\n            <AppContext.Provider value={{...this.state, ...this.actions}}> \r\n                <App />\r\n            </AppContext.Provider>\r\n        )\r\n    }\r\n\r\n    //XMLHttpRequest - pain to use, old\r\n    //window.fetch still work and normal\r\n    //axios - third party\r\n\r\n    async componentDidMount() {\r\n        const catresp = await axios.get('/api/category/')\r\n        const cats = {}\r\n        \r\n        for (const cat of catresp.data) {\r\n            cats[cat.id] = cat\r\n        }\r\n        //console.log(cats)\r\n        this.setState(\r\n            {categories: cats} // data type is an array\r\n        )\r\n        \r\n\r\n        const prodresp = await axios.get('/api/product/')\r\n        const prods = {}\r\n\r\n        for (const prod of prodresp.data) {\r\n            prods[prod.id] = prod\r\n        }\r\n        //console.log(prods)\r\n        this.setState(\r\n            {products: prods} // data type is an array\r\n        )\r\n        \r\n    }\r\n\r\n    addToCart = (pid) => \r\n    {\r\n        //console.log(\"another\") //show where i click add cart\r\n        //console.log(this.state.cart[pid] + \" this product to start\")\r\n        //console.log(this.state.cartCount + \" cart count to start\")\r\n        if (!this.state.cart[pid])\r\n        {\r\n            //console.log(\"something\")\r\n            this.setState(state => produce(state, draft => {\r\n                draft.cart[pid] = 1\r\n                draft.cartCount = draft.cartCount + 1\r\n                //console.log(draft.cart[pid])\r\n            }))\r\n            //console.log(this.state.cart[pid] + \" after adding\")\r\n        }\r\n        else {\r\n            this.setState(state => produce(state, draft => {\r\n                draft.cart[pid] = draft.cart[pid] + 1\r\n                draft.cartCount = draft.cartCount + 1\r\n                //console.log(draft.cart[pid])\r\n            }))\r\n            //console.log(this.state.cart[pid] + \" after adding\")\r\n        }\r\n\r\n        //this.recountCart()\r\n    }\r\n\r\n    removeFromCart = (pid, qty) => \r\n    {\r\n        this.setState(state => produce(state, draft => {\r\n            delete draft.cart[pid]\r\n            draft.cartCount = draft.cartCount - qty\r\n            //console.log(draft.cart[pid])\r\n        }))\r\n\r\n        //this.recountCart()\r\n    }\r\n\r\n    getCartTotal = () =>\r\n    {\r\n        let total = 0\r\n\r\n        Object.entries(this.state.cart).map((c) => { \r\n            const prod = Object.values(this.state.products).find(x => x.id === parseInt(c[0]))\r\n            total = total + (prod.price * c[1])\r\n            return (total)\r\n        })\r\n        \r\n        return (total)\r\n    }\r\n\r\n    clearCart = () =>\r\n    {\r\n        this.setState(state => produce(state, draft => {\r\n            draft.cart = {}\r\n            draft.cartCount = 0\r\n        }))\r\n    }\r\n\r\n    // recountCart = () =>\r\n    // {\r\n    //     let tot = 0\r\n\r\n    //     for (const c of Object.values(this.state.cart))\r\n    //     {\r\n    //         tot = tot + c\r\n    //         console.log('total: ' + tot)\r\n    //     }\r\n        \r\n    //     this.setState(state => produce(state, draft => {\r\n    //         draft.cartCount = tot\r\n    //     }))\r\n    // }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport AppProvider from './context-provider';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport '@fortawesome/fontawesome-free/css/all.css';\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<AppProvider />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}